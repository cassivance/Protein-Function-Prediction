library(ggplot2)
library(readr)
Evalues <- read_tsv("output23.txt")
Evalueshist <- ggplot(data=Evalues, aes(Evalues[c(11)])) + geom_histogram()
Evalueshist <- Evalueshist + labs(title="Null Distribution of E-values", x="E-value", y="Count")+
geom_histogram(color="black", fill="white")
Evalueshist
Evalues <- read_tsv("output23.txt")
Evalueshist <- ggplot(data=Evalues, aes(Evalues[c(11)])) + geom_histogram()
Evalueshist <- Evalueshist + labs(title="Null Distribution of E-values", x="E-value", y="Count")+
geom_histogram(color="black", fill="white")
Evalueshist
library(ggplot2)
library(readr)
library(dplyr)
library(qqman)
library(ggplot2)
library(readr)
library(dplyr)
library(qqman)
install.packages("qqman")
library(ggplot2)
library(readr)
library(dplyr)
library(qqman)
NullEvalues <- read_tsv("outputRand2.txt")
Evalues <- read_tsv("outputCandida.txt")
NullEvalues <- read_tsv("outputRand2.txt")
Evalues <- read_tsv("outputCandida.txt")
install.packages("qqman")
library(ggplot2)
library(readr)
library(dplyr)
library(qqman)
install.packages("qqman")
NullEvalues <- read_tsv("outputRand2.txt")
Evalues <- read_tsv("outputCandida.txt")
#Give column names to the null and relative data frames
colnames(Evalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
colnames(NullEvalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
#order the data frames from smallest to largest evalues
Evalues <- arrange(Evalues, evalue)
NullEvalues <- arrange(NullEvalues, evalue)
# If we want equal number of points include these two lines
Evalues <- head(Evalues, n=56000)
NullEvalues <- head(NullEvalues, n=56000)
cols <- c("null"="#f04546","relative"="#3591d1")
ggplot() +
geom_histogram(data=Evalues, aes(Evalues$evalue, fill="relative") , alpha = .3) +
geom_histogram(data=NullEvalues, aes(NullEvalues$evalue, fill="null"), alpha = .3) +
labs(title="Null Distribution and Alignment of Candida and Relative Sequences", x="E-value", y="Count")+
scale_colour_manual(values=cols) + scale_fill_manual(name="Alignments",values=cols)
manhattanEval <- select(Evalues, qseqid, sseqid, evalue)
manhattanEval <-manhattanEval[(manhattanEval[,3]<1),]
targetGenes <- c()
relativeGenes <- c()
for(i in 1:length(manhattanEval$qseqid)){
targetGenes <- c(targetGenes, as.integer(substr(manhattanEval$qseqid[i], 8, 14)))
relativeGenes <- c(relativeGenes, as.integer(substr(manhattanEval$sseqid[i], 6, 10)))
}
manhattanEval$target <- targetGenes
manhattanEval$relative <- relativeGenes
manhattanEval
manhattan(manhattanEval,main = "E-valules less than 1.0 for Relative Sequences", ylim = c(0, 120) ,chr = "relative", bp = "target", p = "evalue", col = c("lightcoral", "lightblue"), ylab = "-log10(evalue)", xlab= "Relative Sequences")
#Give column names to the null and relative data frames
colnames(Evalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
colnames(NullEvalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
#order the data frames from smallest to largest evalues
Evalues <- arrange(Evalues, evalue)
NullEvalues <- arrange(NullEvalues, evalue)
# If we want equal number of points include these two lines
#Evalues <- head(Evalues, n=56000)
#NullEvalues <- head(NullEvalues, n=56000)
cols <- c("null"="#f04546","relative"="#3591d1")
ggplot() +
geom_histogram(data=Evalues, aes(Evalues$evalue, fill="relative") , alpha = .3) +
geom_histogram(data=NullEvalues, aes(NullEvalues$evalue, fill="null"), alpha = .3) +
labs(title="Null Distribution and Alignment of Candida and Relative Sequences", x="E-value", y="Count")+
scale_colour_manual(values=cols) + scale_fill_manual(name="Alignments",values=cols)
NullEvalues <- read_tsv("outputRand2.txt")
Evalues <- read_tsv("outputCandida.txt")
#Give column names to the null and relative data frames
colnames(Evalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
colnames(NullEvalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
#order the data frames from smallest to largest evalues
Evalues <- arrange(Evalues, evalue)
NullEvalues <- arrange(NullEvalues, evalue)
# If we want equal number of points include these two lines
#Evalues <- head(Evalues, n=56000)
#NullEvalues <- head(NullEvalues, n=56000)
cols <- c("null"="#f04546","relative"="#3591d1")
ggplot() +
geom_histogram(data=Evalues, aes(Evalues$evalue, fill="relative") , alpha = .3) +
geom_histogram(data=NullEvalues, aes(NullEvalues$evalue, fill="null"), alpha = .3) +
labs(title="Null Distribution and Alignment of Candida and Relative Sequences", x="E-value", y="Count")+
scale_colour_manual(values=cols) + scale_fill_manual(name="Alignments",values=cols)
install.packages("qqman")
library(ggplot2)
library(readr)
library(dplyr)
library(qqman)
NullEvalues <- read_tsv("outputRand2.txt")
Evalues <- read_tsv("outputCandida.txt")
#Give column names to the null and relative data frames
colnames(Evalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
colnames(NullEvalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
#order the data frames from smallest to largest evalues
Evalues <- arrange(Evalues, evalue)
NullEvalues <- arrange(NullEvalues, evalue)
# If we want equal number of points include these two lines
Evalues <- head(Evalues, n=56000)
NullEvalues <- head(NullEvalues, n=56000)
cols <- c("null"="#f04546","relative"="#3591d1")
ggplot() +
geom_histogram(data=Evalues, aes(Evalues$evalue, fill="relative") , alpha = .3) +
geom_histogram(data=NullEvalues, aes(NullEvalues$evalue, fill="null"), alpha = .3) +
labs(title="Null Distribution and Alignment of Candida and Relative Sequences", x="E-value", y="Count")+
scale_colour_manual(values=cols) + scale_fill_manual(name="Alignments",values=cols)
manhattanEval <- select(Evalues, qseqid, sseqid, evalue)
manhattanEval <-manhattanEval[(manhattanEval[,3]<1),]
targetGenes <- c()
relativeGenes <- c()
for(i in 1:length(manhattanEval$qseqid)){
targetGenes <- c(targetGenes, as.integer(substr(manhattanEval$qseqid[i], 8, 14)))
relativeGenes <- c(relativeGenes, as.integer(substr(manhattanEval$sseqid[i], 6, 10)))
}
manhattanEval$target <- targetGenes
manhattanEval$relative <- relativeGenes
manhattanEval
manhattan(manhattanEval,main = "E-valules less than 1.0 for Relative Sequences", ylim = c(0, 120) ,chr = "relative", bp = "target", p = "evalue", col = c("lightcoral", "lightblue"), ylab = "-log10(evalue)", xlab= "Relative Sequences")
targetGenes <- c()
relativeGenes <- c()
for(i in 1:length(relLessThanOne$qseqid)){
targetGenes <- c(targetGenes, as.integer(substr(relLessThanOne$qseqid[i], 8, 14)))
relativeGenes <- c(relativeGenes, as.integer(substr(relLessThanOne$sseqid[i], 6, 10)))
}
#Give column names to the null and relative data frames
colnames(Evalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
colnames(NullEvalues) <- c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen","qstart", "qend", "sstart", "send", "evalue", "bitscore")
#order the data frames from smallest to largest evalues
Evalues <- arrange(Evalues, evalue)
NullEvalues <- arrange(NullEvalues, evalue)
nrow(Evalues)
nrow(NullEvalues)
cols <- c("null"="#f04546","relative"="#3591d1")
ggplot() +
geom_histogram(data=Evalues, aes(Evalues$evalue, fill="relative") , alpha = .3) +
geom_histogram(data=NullEvalues, aes(NullEvalues$evalue, fill="null"), alpha = .3) +
labs(title="Null Distribution and Alignment of Candida and Relative Sequences", x="E-value", y="Count")+
scale_colour_manual(values=cols) + scale_fill_manual(name="Alignments",values=cols)
nullLessThanOne <- select(NullEvalues, qseqid, sseqid, evalue)
nullLessThanOne <-nullLessThanOne[(nullLessThanOne[,3]<.05),]
relLessThanOne <- select(Evalues, qseqid, sseqid, evalue)
relLessThanOne <-relLessThanOne[(relLessThanOne[,3]<.05),]
cols <- c("null"="#f04546","relative"="#3591d1")
ggplot() +
geom_histogram(data=relLessThanOne, aes(relLessThanOne$evalue, fill="relative") , alpha = .3) +
geom_histogram(data=nullLessThanOne, aes(nullLessThanOne$evalue, fill="null"), alpha = .3) +
labs(title="Null Distribution and Alignment of Candida and Relative Sequences for E-values less than 1.0", x="E-value", y="Count")+
scale_colour_manual(values=cols) + scale_fill_manual(name="Alignments",values=cols)
targetGenes <- c()
relativeGenes <- c()
for(i in 1:length(relLessThanOne$qseqid)){
targetGenes <- c(targetGenes, as.integer(substr(relLessThanOne$qseqid[i], 8, 14)))
relativeGenes <- c(relativeGenes, as.integer(substr(relLessThanOne$sseqid[i], 6, 10)))
}
relLessThanOne$target <- targetGenes
relLessThanOne$relative <- relativeGenes
relLessThanOne
manhattan(relLessThanOne,main = "E-valules less than 1.0 for Relative Sequences", ylim = c(0, 120) ,chr = "relative", bp = "target", p = "evalue", col = c("lightcoral", "lightblue"), ylab = "-log10(evalue)", xlab= "Relative Sequences")
